{"version":3,"sources":["webpack:///./src/components/error-boundary/index.js","webpack:///./src/components/notification-banner/index.js","webpack:///./src/github-client/index.js","webpack:///./src/components/repo-chooser/index.js","webpack:///./src/components/filter-tool/index.js","webpack:///./src/components/file-comments/index.js","webpack:///./src/comment-finder/file-parser.js","webpack:///./src/comment-finder/index.js","webpack:///./src/comment-finder/comment-filters.js","webpack:///./src/pages/index.js","webpack:///./src/components/repo-chooser/index.module.css","webpack:///./src/components/filter-tool/index.module.css","webpack:///./src/components/file-comments/index.module.css","webpack:///./src/images/missing-icons/egg.svg","webpack:///./src/pages/index.module.css"],"names":["ErrorBoundary","props","_this","_React$Component","call","this","state","thrownError","componentDidCatch","error","info","console","log","setState","render","react","style","whiteSpace","toString","errorInfo","componentStack","children","React","NotificationBanner","_this$props","type","isOpen","message","backgroundColor","title","details","GithubClient","githubRepoName","test","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","repo","readRef","sent","Error","t0","stop","tree","wrapAsyncGenerator_default","_callee2","headHash","commit","stream","object","_context2","awaitAsyncGenerator_default","loadAs","treeWalk","read","promisify","body","getFileContent","_ref3","_callee3","fileObject","content","_context3","hash","abrupt","_x","apply","arguments","getAuthorOfLine","_ref4","_callee4","filename","lineNumber","_context4","_x2","_x3","mixinGithubDb","mixinCreateTree","mixinAddCache","mixinIndexedDb","mixinMemCache","mixinReadCombiner","mixinFormats","newLoadAs","callback","bind","realType","err","bodyStr","i","length","String","fromCharCode","mixinFormatsFixed","mixinWalkers","init","repoP","Object","keys","reduce","acc","key","_Object$assign","assign","_repo","validRepoNameRegex","RepoChooser","input","allowRequest","handleRepoInput","e","target","value","handleSubmit","_this$state","githubClient","preventDefault","onRepoFetch","repoClient","repoName","stack","onSubmit","className","styles","form","notification_banner","htmlFor","name","onChange","placeholder","sortOptions","Nothing","Date Modified","Date Created","filterOptions","Anything","Swear Words","Proper Names","FilterTool","handleSortByChange","uiChoices","sortBy","handleSortDescChange","sortDesc","handleFilterByChange","filterBy","handleHideFilesChange","hideFilesWithoutComments","checked","handleExpandCommentsChange","expandAllComments","disableTools","_this$props$uiChoices","disabled","map","option","checkboxContainer","checkbox","checkboxLabel","File","handleContainerClick","_this$props$comments","comments","file","urlBase","expandAll","downloading","onClick","link","href","path","substr","comment","line","split","lineLink","commentLine","FileComments","_this$props2","fileComments","fileContainer","file_comments_File","emptyState","escapeRegexChars","str","replace","CommentParser","_ref","CDI","CDO","CDC","extractComments","codeStr","lexer","moo","compile","tokens","reset","acceptedTypes","includes","push","WS","SingleQuoteString","DoubleQuoteString","BacktickString","inline","cdiStr","RegExp","getInlineCommentRegex","multiline","match","cdoStr","cdcStr","getMultilineRegex","lineBreaks","garbage","NL","forEach","undefined","loaders","options","o","parser","comment_finder","loader","find","p","stitchedComments","stitched","current","col","isParseable","Boolean","filter","Filter","comment_filters","isProfane","GithubCommentsPage","repoTree","stats","loadingTree","numFiles","numFilesLoaded","uiRepoTree","handleRepoFetched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","stateTree","_i","_object","asyncIterator_default","done","concat","return","finish","findComments","handleUiChoicesChange","t1","fileCommentsStatic","repoTreeStatic","commentFilters","filterFunc","isLoadingTree","isLoadingFileContents","error_boundary","container","drawer","repo_chooser","filter_tool","verticalContainer","header","egg_default","fa","file_comments","module","exports","__webpack_require__","Egg","createElement","d","opacity","vectorEffect","fill","fillOpacity","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeDashoffset","strokeOpacity","transform","displayName","defaultProps","version","viewBox","height","width","default"],"mappings":"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","file":"component---src-pages-index-js-8bae08600248e9080724.js","sourcesContent":["import * as React from 'react'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { thrownError: null }\n  }\n\n  componentDidCatch(error, info) {\n    console.log('ERROR')\n    // Display fallback UI\n    this.setState({ thrownError: error })\n    // You can also log the error to an error reporting service\n    console.error(error, info)\n  }\n\n  render() {\n    const { thrownError } = this.state\n    if (thrownError) {\n      // You can render any custom fallback UI\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      )\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import * as React from 'react'\n\nclass NotificationBanner extends React.PureComponent {\n  render() {\n    const { type, isOpen, message } = this.props\n    const backgroundColor = type === 'error' ? 'red' : 'none'\n    if (isOpen)\n      return (\n        <div style={{ backgroundColor }}>\n          <h2>{message.title}</h2>\n          {message.details && (\n            <details style={{ whiteSpace: 'pre-wrap' }}>\n              {message.details}\n            </details>\n          )}\n        </div>\n      )\n    else return null\n  }\n}\n\nexport default NotificationBanner\n","import promisify from 'util.promisify'\nimport mixinIndexedDb from 'js-git/mixins/indexed-db'\nimport mixinAddCache from 'js-git/mixins/add-cache'\nimport mixinGithubDb from 'js-github/mixins/github-db'\nimport mixinCreateTree from 'js-git/mixins/create-tree'\nimport mixinMemCache from 'js-git/mixins/mem-cache'\nimport mixinReadCombiner from 'js-git/mixins/read-combiner'\nimport mixinFormats from 'js-git/mixins/formats'\nimport mixinWalkers from 'js-git/mixins/walkers'\n\n// TODO investigate if this messes with old methods\nconst mixinFormatsFixed = repo => {\n  const loadAs = repo.loadAs\n  repo.loadAs = newLoadAs\n\n  function newLoadAs(type, hash, callback) {\n    if (!callback) return newLoadAs.bind(repo, type, hash)\n    var realType = type === 'text' ? 'blob' : type === 'array' ? 'tree' : type\n\n    const onLoadText = (err, body, hash) => {\n      let bodyStr = ''\n      for (let i = 0; i < body.length; i++) {\n        bodyStr += String.fromCharCode(body[i])\n      }\n      body = bodyStr\n      return callback(err, body, hash)\n    }\n\n    if (type === 'text') return loadAs.call(repo, realType, hash, onLoadText)\n    else return loadAs(type, hash, callback)\n  }\n}\n\nclass GithubClient {\n  constructor(githubRepoName) {\n    this.githubRepoName = githubRepoName\n    // Start out the normal way with a plain object.\n    const repo = {}\n\n    // Mixin the main library using github to provide the following:\n    // - repo.loadAs(type, hash) => value\n    // - repo.saveAs(type, value) => hash\n    // - repo.listRefs(filter='') => [ refs ]\n    // - repo.readRef(ref) => hash\n    // - repo.updateRef(ref, hash) => hash\n    // - repo.deleteRef(ref) => null\n    // - repo.createTree(entries) => hash\n    // - repo.hasHash(hash) => has\n    mixinGithubDb(\n      repo,\n      githubRepoName,\n      'd8dab5919930651aec0d4cf1cbd9341c4e2866a8'\n    )\n\n    // Github has this built-in, but it's currently very buggy so we replace with\n    // the manual implementation in js-git.\n    mixinCreateTree(repo)\n\n    // Cache github objects locally in indexeddb\n    mixinAddCache(repo, mixinIndexedDb)\n\n    // Cache everything except blobs over 100 bytes in memory.\n    // This makes path-to-hash lookup a sync operation in most cases.\n    mixinMemCache(repo)\n\n    // Combine concurrent read requests for the same hash\n    mixinReadCombiner(repo)\n\n    // Add in value formatting niceties.  Also adds text and array types.\n    mixinFormats(repo)\n    mixinFormatsFixed(repo)\n\n    mixinWalkers(repo)\n\n    mixinIndexedDb.init(function(err) {\n      if (err) throw err\n    })\n\n    // wrap the repo functions in promises\n    const repoP = Object.keys(repo).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: promisify(repo[key])\n      }),\n      {}\n    )\n\n    this._repo = repo\n    this.repo = repoP\n  }\n\n  test = async () => {\n    try {\n      const headHash = await this.repo.readRef('refs/heads/master')\n      if (!headHash) throw new Error('Failed to fetch refs/heads/master')\n    } catch (e) {\n      console.log('test error occurred')\n      console.error(e)\n    }\n  }\n\n  tree = async function*() {\n    try {\n      console.log(this.repo)\n      const headHash = await this.repo.readRef('refs/heads/master')\n      console.log({ headHash })\n      const commit = await this.repo.loadAs('commit', headHash)\n      console.log({ commit })\n      // const tree = await this.repo.loadAs('tree', commit.tree)\n      const stream = await this.repo.treeWalk(commit.tree)\n      stream.read = promisify(stream.read)\n\n      let object\n      while ((object = await stream.read())) {\n        if (!object.body) yield object\n      }\n    } catch (e) {\n      console.log('tree error occurred')\n      console.error(e)\n    }\n  }\n\n  getFileContent = async fileObject => {\n    try {\n      const content = await this.repo.loadAs('text', fileObject.hash)\n      return content\n    } catch (e) {\n      console.log('content error ocurred')\n      console.error(e)\n    }\n  }\n\n  getAuthorOfLine = async (filename, lineNumber) => {}\n}\n\nexport default GithubClient\n","import * as React from 'react'\nimport NotificationBanner from '../notification-banner'\nimport GithubClient from '../../github-client'\n\nimport styles from './index.module.css'\n\nconst validRepoNameRegex = /^[a-zA-Z0-9-]+\\/[a-zA-Z0-9-]+$/\n\nclass RepoChooser extends React.PureComponent {\n  state = {\n    input: '',\n    error: null,\n    allowRequest: true\n  }\n\n  handleRepoInput = e => {\n    this.setState({ input: e.target.value, error: null, allowRequest: true })\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n    const { input, allowRequest } = this.state\n    if (!allowRequest) return\n\n    if (input && validRepoNameRegex.test(input)) {\n      this.setState({ allowRequest: false })\n      const githubClient = new GithubClient(input)\n      try {\n        await githubClient.test()\n        this.props.onRepoFetch({ repoClient: githubClient, repoName: input })\n      } catch (e) {\n        this.setState({\n          error: {\n            title: e.toString(),\n            details: e.stack\n          }\n        })\n      }\n    } else\n      this.setState({\n        error: {\n          title: 'Thats not a valid repo name!'\n        }\n      })\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <NotificationBanner type=\"error\" isOpen={error} message={error} />\n        <label htmlFor=\"repoName\">Repo Name</label>\n        <input\n          name=\"repoName\"\n          onChange={this.handleRepoInput}\n          type=\"text\"\n          placeholder=\"andykais/egg-hunt\"\n        />\n        <button>cache repo</button>\n      </form>\n    )\n  }\n}\n\nexport default RepoChooser\n","import * as React from 'react'\n\nimport styles from './index.module.css'\n\nconst sortOptions = {\n  Nothing: null,\n  'Date Modified': () => {},\n  'Date Created': () => {}\n}\n\nconst filterOptions = {\n  Anything: null,\n  'Swear Words': () => {},\n  'Proper Names': () => {}\n}\n\nclass FilterTool extends React.PureComponent {\n  handleSortByChange = e => {\n    this.props.onChange({\n      ...this.props.uiChoices,\n      sortBy: e.target.value\n    })\n  }\n\n  handleSortDescChange = e => {\n    this.props.onChange({\n      ...this.props.uiChoices,\n      sortDesc: e.target.value\n    })\n  }\n\n  handleFilterByChange = e => {\n    this.props.onChange({\n      ...this.props.uiChoices,\n      filterBy: e.target.value\n    })\n  }\n\n  handleHideFilesChange = e => {\n    this.props.onChange({\n      ...this.props.uiChoices,\n      hideFilesWithoutComments: e.target.checked\n    })\n  }\n\n  handleExpandCommentsChange = e => {\n    this.props.onChange({\n      ...this.props.uiChoices,\n      expandAllComments: e.target.checked\n    })\n  }\n\n  render() {\n    const { disableTools } = this.props\n    const { hideFilesWithoutComments, expandAllComments } = this.props.uiChoices\n\n    return (\n      <form className={styles.form}>\n        <fieldset disabled={disableTools && 'disabled'}>\n          <div className={styles.input}>\n            <label htmlFor=\"sortBy\">Sort Comments By</label>\n            <select name=\"sortBy\" onChange={this.handleSortByChange}>\n              {Object.keys(sortOptions).map(option => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n\n            <select name=\"sortDesc\" onChange={this.handleSortByChange}>\n              <option value=\"Descending\">Descending</option>\n              <option value=\"Ascending\">Ascending</option>\n            </select>\n          </div>\n\n          <div className={styles.input}>\n            <label htmlFor=\"filterBy\">Filter Comments By</label>\n            <select name=\"filterBy\" onChange={this.handleFilterByChange}>\n              {Object.keys(filterOptions).map(option => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className={`${styles.input} ${styles.checkboxContainer}`}>\n            <input\n              className={styles.checkbox}\n              name=\"hideFilesWithoutComments\"\n              type=\"checkbox\"\n              checked={hideFilesWithoutComments}\n              onChange={this.handleHideFilesChange}\n            />\n            <label\n              className={styles.checkboxLabel}\n              htmlFor=\"hideFilesWithoutComments\"\n            >\n              Hide Files Without Comments\n            </label>\n          </div>\n\n          <div className={`${styles.input} ${styles.checkboxContainer}`}>\n            <input\n              className={styles.checkbox}\n              name=\"expandAllComments\"\n              type=\"checkbox\"\n              checked={expandAllComments}\n              onChange={this.handleExpandCommentsChange}\n            />\n            <label className={styles.checkboxLabel} htmlFor=\"expandAllComments\">\n              Expand All Comments\n            </label>\n          </div>\n        </fieldset>\n      </form>\n    )\n  }\n}\n\nexport default FilterTool\n","import * as React from 'react'\n\nimport styles from './index.module.css'\n\nclass File extends React.Component {\n  state = {\n    isOpen: false\n  }\n\n  handleContainerClick = e => {\n    const { comments = [] } = this.props\n\n    if (comments.length) this.setState(state => ({ isOpen: !state.isOpen }))\n  }\n\n  render() {\n    const { file, comments, urlBase, expandAll } = this.props\n    const { isOpen } = this.state\n\n    return (\n      <div className={`${styles.content} ${file ? '' : styles.downloading}`}>\n        <div onClick={this.handleContainerClick} className={styles.title}>\n          <span className={styles.link}>\n            <a href={`${urlBase}${file.path}`}>{file.path.substr(1)}</a>\n          </span>\n          <span>{`${comments.length} Comments`}</span>\n        </div>\n        {(isOpen || expandAll) && (\n          <div className={styles.comments}>\n            {comments.map(comment => {\n              return (\n                <div className={styles.comment} key={comment.line}>\n                  {comment.value.split('\\n').map((line, i) => (\n                    <React.Fragment key={`${comment.line}-${i}`}>\n                      <div className={styles.lineLink}>\n                        <a href={`${urlBase}${file.path}#L${comment.line}`}>\n                          {comment.line + i}\n                        </a>\n                      </div>\n                      <div className={styles.commentLine}>\n                        <span>{line}</span>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )\n            })}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nclass FileComments extends React.PureComponent {\n  render() {\n    const { repoName, tree, fileComments, expandAll } = this.props\n    return repoName ? (\n      <div className={styles.fileContainer}>\n        {tree.map(file => {\n          const comments = fileComments[file.path] || []\n          const urlBase = `https://github.com/${repoName}/blob/master`\n\n          return (\n            <File {...{ urlBase, file, comments, expandAll }} key={file.path} />\n          )\n        })}\n      </div>\n    ) : (\n      <div className={styles.emptyState}>\n        <h2>Try Entering a Github repo on the left!</h2>\n      </div>\n    )\n  }\n}\n\nexport default FileComments\n","import moo from 'moo'\n\nconst escapeRegexChars = str => str.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nconst getInlineCommentRegex = CDI => {\n  if (CDI) {\n    const cdiStr = escapeRegexChars(CDI)\n    return new RegExp(`${cdiStr}.*$`)\n    // return new RegExp(String.raw`([ ]*${cdiStr}.*?\\n)*[ ]*${cdiStr}.*?$`)\n  }\n}\n\nconst getMultilineRegex = (CDO, CDC) => {\n  if (CDO && CDC) {\n    const cdoStr = escapeRegexChars(CDO)\n    const cdcStr = escapeRegexChars(CDC)\n    return new RegExp(`${cdoStr}[\\\\s\\\\S]*?${cdcStr}`)\n  }\n}\n\nclass CommentParser {\n  constructor({ CDI, CDO, CDC }) {\n    const inline = getInlineCommentRegex(CDI)\n    const multiline = getMultilineRegex(CDO, CDC)\n\n    const tokens = {\n      WS: /[ \\t]+/,\n      SingleQuoteString: /\"(?:\\\\[\"\\\\]|[^[\\n\\r]\"\\\\])*?\"/,\n      DoubleQuoteString: /'(?:\\\\['\\\\]|[^[\\n\\r]\"\\\\])*?'/,\n      BacktickString: /`(?:\\\\[`\\\\]|[^\"\\\\])*?`/,\n      inline,\n      multiline: {\n        match: multiline,\n        lineBreaks: true\n      },\n      garbage: /.+?/,\n      NL: { match: /[\\n\\r]/, lineBreaks: true }\n    }\n\n    Object.keys(tokens).forEach(\n      key => (tokens[key] === undefined ? delete tokens[key] : '')\n    )\n\n    this.tokens = tokens\n    this.acceptedTypes = ['inline', 'multiline']\n  }\n\n  extractComments = codeStr => {\n    const lexer = moo.compile(this.tokens)\n    lexer.reset(codeStr)\n\n    const comments = []\n    let next\n\n    while ((next = lexer.next())) {\n      if (this.acceptedTypes.includes(next.type)) {\n        comments.push(next)\n      }\n    }\n    return comments\n  }\n}\n\nexport default CommentParser\n","import CommentParser from './file-parser'\n\nconst loaders = [\n  {\n    test: /.(js|go)$/,\n    options: {\n      CDI: '//',\n      CDO: '/*',\n      CDC: '*/'\n    }\n  },\n  {\n    test: /.(sh|agc)$/,\n    options: {\n      CDI: '#'\n    }\n  },\n  {\n    test: /.asm$/,\n    options: {\n      CDI: ';'\n    }\n  }\n].map(o => ({\n  ...o,\n  parser: new CommentParser(o.options)\n}))\n\nexport default ({ filename, content }) => {\n  const loader = loaders.find(p => p.test.test(filename))\n\n  if (loader) {\n    try {\n      const comments = loader.parser.extractComments(content)\n      const stitchedComments = []\n      let stitched = comments ? comments[0] : null\n      for (let i = 1; i < comments.length; i++) {\n        // const prev = comments[i - 1]\n        const current = comments[i]\n\n        if (\n          stitched.type === 'inline' &&\n          current.type === 'inline' &&\n          stitched.line + stitched.lineBreaks + 1 === current.line &&\n          stitched.col === current.col\n        ) {\n          stitched.value += '\\n' + current.value\n          stitched.lineBreaks++\n        } else {\n          stitchedComments.push(stitched)\n          stitched = current\n        }\n      }\n      if (stitched) stitchedComments.push(stitched)\n      return stitchedComments\n    } catch (e) {\n      console.error(filename, 'FUECK UP')\n      throw e\n    }\n  }\n}\n\nexport const isParseable = filename =>\n  Boolean(loaders.find(p => p.test.test(filename)))\n","import Filter from 'bad-words'\n\n// const { list: words } = new Filter()\nconst filter = new Filter()\n\nconst swearWords = comment => filter.isProfane(comment)\n\nconst properNames = comment => false\n\nexport default {\n  'Swear Words': swearWords,\n  'Proper Names': properNames\n}\n","import * as React from 'react'\nimport ErrorBoundary from '../components/error-boundary'\nimport RepoChooser from '../components/repo-chooser'\nimport FilterTool from '../components/filter-tool'\nimport FileComments from '../components/file-comments'\nimport findComments, { isParseable } from '../comment-finder'\nimport commentFilters from '../comment-finder/comment-filters'\nimport EggIcon from '../images/missing-icons/egg.svg'\nimport { FaGithub } from 'react-icons/fa/index.mjs'\n\nimport styles from './index.module.css'\nimport './global-styles.css'\n\nclass GithubCommentsPage extends React.Component {\n  state = {\n    repoName: null,\n    repoClient: null,\n    repoTree: [],\n    fileComments: {},\n    stats: {\n      loadingTree: false,\n      numFiles: 0,\n      numFilesLoaded: 0\n    },\n    uiChoices: {\n      hideFilesWithoutComments: true,\n      expandAllComments: false,\n      sortBy: 'numComments',\n      sortDesc: true,\n      filterBy: null // 'none', 'swears' || 'names'\n    },\n    uiRepoTree: []\n  }\n  handleRepoFetched = async ({ repoName, repoClient }) => {\n    try {\n      const stats = { loadingTree: true, numFiles: 0, numFilesLoaded: 0 }\n      this.setState({\n        repoName,\n        repoClient,\n        stats\n      })\n      const tree = []\n      const fileComments = {}\n      for await (const object of repoClient.tree()) {\n        tree.push(object)\n        if (!object.body && isParseable(object.path)) stats.numFiles++\n        const stateTree = [...tree]\n        this.setState({\n          repoTree: stateTree,\n          uiRepoTree: stateTree,\n          stats: { ...stats }\n        })\n      }\n      for (const object of tree) {\n        if (!object.body && isParseable(object.path)) {\n          const content = await repoClient.getFileContent(object)\n          stats.numFilesLoaded++\n          const comments = findComments({ filename: object.path, content })\n\n          fileComments[object.path] = comments\n          this.setState({\n            fileComments: { ...fileComments },\n            stats: { ...stats }\n          })\n        }\n      }\n      stats.loadingTree = false\n      this.setState({ stats: { ...stats } })\n      this.handleUiChoicesChange(this.state.uiChoices, fileComments, tree)\n    } catch (e) {\n      console.log('handle repo fetched error')\n      console.error(e)\n    }\n  }\n\n  handleUiChoicesChange = (uiChoices, fileCommentsStatic, repoTreeStatic) => {\n    const repoTree = repoTreeStatic || this.state.repoTree\n    const fileComments = fileCommentsStatic || this.state.fileComments\n    this.setState({ uiChoices })\n    let uiRepoTree = repoTree\n\n    if (uiChoices.hideFilesWithoutComments) {\n      uiRepoTree = uiRepoTree.filter(\n        file => fileComments[file.path] && fileComments[file.path].length\n      )\n    }\n    console.log(uiChoices.filterBy, commentFilters[uiChoices.filterBy])\n    if (commentFilters[uiChoices.filterBy]) {\n      const filterFunc = commentFilters[uiChoices.filterBy]\n      uiRepoTree = uiRepoTree.map(\n        file =>\n          fileComments[file.path] &&\n          fileComments[file.path].filter(comment => filterFunc(comment.value))\n      )\n    }\n    this.setState({ uiRepoTree })\n  }\n\n  render() {\n    const { repoName, fileComments, uiRepoTree, stats, uiChoices } = this.state\n    const isLoadingTree = stats.loadingTree\n    const isLoadingFileContents =\n      stats.loadingTree || stats.numFiles !== stats.numFilesLoaded\n    return (\n      <ErrorBoundary>\n        <div className={styles.container}>\n          <div className={styles.drawer}>\n            <RepoChooser onRepoFetch={this.handleRepoFetched} />\n            <FilterTool\n              uiChoices={uiChoices}\n              disableTools={isLoadingTree}\n              onChange={this.handleUiChoicesChange}\n            />\n          </div>\n          <div className={styles.verticalContainer}>\n            <div className={styles.header}>\n              <h1>egg-hunt</h1>\n              <EggIcon />\n              <a href=\"https://github.com/andykais/egg-hunt\">\n                <FaGithub />\n              </a>\n            </div>\n            <div className={styles.children}>\n              {isLoadingTree && (\n                <div className={styles.stats}>\n                  {isLoadingTree && <div>finding files...</div>}\n                  {isLoadingFileContents && (\n                    <div>{`loaded ${stats.numFilesLoaded}/${\n                      stats.numFiles\n                    } files`}</div>\n                  )}\n                </div>\n              )}\n\n              <FileComments\n                repoName={repoName}\n                tree={uiRepoTree}\n                fileComments={fileComments}\n                expandAll={uiChoices.expandAllComments}\n              />\n            </div>\n          </div>\n        </div>\n      </ErrorBoundary>\n    )\n  }\n}\nexport default GithubCommentsPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"index-module--form--CLlZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"index-module--form--EbNTo\",\"input\":\"index-module--input--3vvP4\",\"checkbox\":\"index-module--checkbox--3g3h1\",\"checkboxLabel\":\"index-module--checkboxLabel--3Vk3Q\",\"checkboxContainer\":\"index-module--checkboxContainer--1quWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emptyState\":\"index-module--emptyState--1ZU2N\",\"fileContainer\":\"index-module--fileContainer--15mNF\",\"content\":\"index-module--content--2FII9\",\"title\":\"index-module--title--1JJxQ\",\"link\":\"index-module--link--8_niV\",\"downloading\":\"index-module--downloading--3ffY3\",\"comments\":\"index-module--comments--HVVLS\",\"comment\":\"index-module--comment--2LqNp\",\"lineLink\":\"index-module--lineLink--37EVU\",\"commentLine\":\"index-module--commentLine--BFcpY\"};","var React = require('react');\n\nfunction Egg (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"m 191.69877,163.17227 c 0,49.68262 -40.27571,89.95834 -89.95833,89.95834 -49.682618,0 -89.958339,-40.27572 -89.958337,-89.95834 1e-6,-49.68262 40.275722,-147.637503 89.958337,-147.637502 49.68261,4e-6 89.95833,97.954892 89.95833,147.637502 z\",\"style\":{\"opacity\":\"1\",\"vectorEffect\":\"none\",\"fill\":\"none\",\"fillOpacity\":\"1\",\"stroke\":\"currentColor\",\"strokeWidth\":\"4\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeMiterlimit\":\"4\",\"strokeDasharray\":\"none\",\"strokeDashoffset\":\"0\",\"strokeOpacity\":\"1\"},\"key\":0}),React.createElement(\"path\",{\"transform\":\"scale(0.26458333)\",\"d\":\"M 384.53125 58.714844 C 347.02568 58.714843 310.94034 73.495289 277.20117 98.630859 C 280.93545 99.97044 284.52973 101.58233 287.92383 103.52148 C 299.62887 110.20896 307.73577 120.06675 311.98633 133.28711 C 316.19881 146.38903 316.38783 162.13143 313.75586 178.89453 C 308.49819 212.38076 293.125 247.77439 269.47656 271.07227 C 245.39221 294.79959 209.75347 309.11165 176.39844 309.10938 C 157.81534 309.10809 142.4422 304.58645 129.6875 295.85547 C 76.704283 405.5811 44.531252 530.41179 44.53125 616.71484 C 44.531242 804.49168 196.75443 956.71484 384.53125 956.71484 C 411.49825 956.71484 437.72987 953.57018 462.88477 947.63672 C 456.43276 944.91582 450.54295 941.87724 445.31445 938.70312 C 424.23304 925.90502 409.57681 908.58034 409.37109 877.19531 C 409.16686 846.03688 423.94764 801.47264 453.74219 765.69531 C 484.23735 729.07668 524.34873 709.14543 569.57031 700.37109 C 613.26863 691.89232 653.92394 694.77604 674.95117 711.50977 C 686.85214 720.9807 693.5479 735.50973 696.01758 753.21875 C 714.35356 711.43815 724.53125 665.26565 724.53125 616.71484 C 724.53125 428.93808 572.30804 58.714859 384.53125 58.714844 z M 477.65039 292.59961 C 478.54857 292.58881 479.44963 292.58978 480.35156 292.60156 C 485.16186 292.66441 490.02218 293.04641 494.91797 293.73242 C 514.30519 296.44902 533.59512 303.83946 551.24023 313.74609 C 568.7856 323.59672 585.27139 336.25092 598.90039 350.32617 C 627.17733 379.52897 642.97835 414.68184 642.99023 452.58984 C 642.99594 470.78341 639.28704 487.74099 633.14648 502.27344 C 627.02818 516.75322 618.58372 528.71175 608.5293 538.31836 C 598.51035 547.89108 586.23991 555.76563 571.5625 561.96875 C 556.89808 568.16638 538.97236 573.0144 519.03125 575.06641 C 498.9145 577.13649 477.33332 576.27578 456.66016 571.3125 C 435.91993 566.33312 417.81183 557.63417 403.62695 545.66602 C 389.4689 533.7205 380.19752 519.39823 374.56445 503.55078 C 369.01353 487.93442 366.91853 470.58027 366.91406 452.6875 C 366.90966 435.05996 368.97707 414.93529 373.41211 395.69922 C 377.93996 376.06058 385.13662 356.4107 396.15039 339.46289 C 407.24164 322.39586 421.53818 309.11989 438.93164 301.10352 C 451.14059 295.4766 464.17765 292.76161 477.65039 292.59961 z M 169.36133 467.38477 C 191.53029 467.26053 213.45894 478.49069 228.875 500.07617 C 246.5576 524.83526 250.09947 554.95536 246.66211 581.29492 C 243.49638 605.55307 234.23178 630.22037 221.69922 647.86719 C 208.1066 667.00664 186.57228 683.5174 159.19531 686.42969 C 131.59582 689.36565 107.29464 677.13091 91.724609 654.46289 C 76.659164 632.52948 71.509698 603.96583 73.332031 579.17578 C 75.178035 554.06374 84.239713 530.16377 99.167969 509.67773 C 113.99233 489.33428 135.11958 471.92922 159.86523 468.13672 C 163.02373 467.65265 166.19433 467.40251 169.36133 467.38477 z \",\"key\":1})]);\n}\n\nEgg.displayName = \"Egg\";\n\nEgg.defaultProps = {\"version\":\"1.1\",\"viewBox\":\"0 0 210 297\",\"stroke\":\"currentColor\",\"fill\":\"currentColor\",\"height\":\"1em\",\"width\":\"1em\"};\n\nmodule.exports = Egg;\n\nEgg.default = Egg;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"index-module--container--Eqp4Q\",\"verticalContainer\":\"index-module--verticalContainer--2pZbg\",\"drawer\":\"index-module--drawer--2Zwkp\",\"header\":\"index-module--header--2Vq0q\",\"children\":\"index-module--children--2ESlk\"};"],"sourceRoot":""}